@startuml
skinparam ParticipantPadding 20
skinparam BoxPadding 20

participant User


participant RegisterClient

participant ServiceAdaptor
participant RegisterClientActor

activate RegisterClient
create RegisterClientActor
RegisterClient -> RegisterClientActor: actorOf
deactivate RegisterClient

box "Actor Register Server" #white
collections RegisterActor
participant ServiceManagerActor
collections ServiceActor
end box

collections RequestRouter

User -\ RegisterClient: register
activate RegisterClient
create ServiceAdaptor
RegisterClient -> ServiceAdaptor: actorOf
deactivate RegisterClient
ServiceAdaptor -\\ RegisterClientActor: RegLocalService
activate RegisterClientActor
RegisterClientActor ->>x RegisterActor : ask(RegService)
deactivate RegisterClientActor
RegisterClientActor ->o RegisterClientActor: failed
activate RegisterClientActor
RegisterClientActor -// RegisterClientActor: RegisterRequestFailed
RegisterClientActor -> RegisterClientActor: delay(RegLocalService)
RegisterClientActor -// RegisterClientActor: RegLocalService
activate RegisterClientActor
RegisterClientActor ->> RegisterActor : ask(RegService)
deactivate RegisterClientActor
deactivate RegisterClientActor
activate RegisterActor

RegisterActor -\\ ServiceManagerActor : RegService
activate ServiceManagerActor
create ServiceActor
ServiceManagerActor -> ServiceActor: actorOf
ServiceManagerActor -\\ ServiceActor : RegService
deactivate ServiceManagerActor
activate ServiceActor
ServiceActor -> ServiceActor: addInstance()
ServiceActor -> ServiceActor: tellToSubscribers()
activate ServiceActor
ServiceActor -// RequestRouter: RegService
deactivate ServiceActor
deactivate ServiceActor

RegisterClientActor o//- RegisterActor : true
deactivate RegisterActor
RegisterClientActor o-// RegisterClientActor: RegisterRequestSucceed


@enduml