syntax = "proto3";

package net.arksea.dsf;

option java_package = "net.arksea.dsf";
option java_outer_classname = "DSF";
//-----------------------------
//获取服务列表
message GetServiceList {
}

message ServiceList {
    repeated string items = 1;
}
//----------------------------
//获取服务信息

//请求
message GetService {
    string name = 1;
}
//返回值
message Service {
    string name = 1;
    repeated Instance instances = 2;
    repeated Subscriber subscribers = 3;
}
message Subscriber {
    string name = 1;
    int32 count = 2;
}
//------------------------------
//注册服务实例
message RegService {
    string name = 1;
    string addr = 2;
    string path = 3;
}
//注销服务实例
message UnregService {
    string name = 1;
    string addr   = 2;
}

//获取服务的实例列表
message GetSvcInstances {
    string name = 1;
}

message SyncSvcInstances {
    string name = 1;       //服务名
    string serialId = 2;   //实例列表序列号
    string subscriber = 3; //订阅者名字
}

message Instance {
    string addr    = 1;
    string path    = 2;
    bool   online  = 3;
    bool   unregistered = 6;
    int64  registerTime = 7;
    int64  unregisterTime = 8;
    int64  lastOfflineTime = 9;
    int64  lastOnlineTime = 10;
}

message SvcInstances {
    string name = 1;
    string serialId = 2;
    repeated Instance instances = 3;
}

//订阅服务的注册与注销事件
message SubService {
    string service = 1;
    string subscriber = 2;
}

message UnsubService {
    string service = 1;
}

enum EnumSerialize {
    BYTESTR = 0;//com.google.protobuf.ByteString
    JAVA = 1;   //Java Object
    PROTO = 2;  //Protobuf Message
    INT = 3;    //Java Integer
    LONG = 4;   //Java Long
    FLOAT = 5;  //Java Float
    DOUBLE = 6; //Java Double
    BOOL = 7;   //Java Boolean
    BYTESTR_ARRAY = 8;//com.google.protobuf.ByteString[]
    PROTO_ARRAY = 9;//Protobuf Message[]
}
//------------------------------------------------
message ServiceRequest {
    string requestId = 1;
    bool  oneway = 2;
    bytes payload = 3;
    EnumSerialize serialize = 4;
    string typeName = 5;
    bytes tracingSpan = 6;
}

message ServiceResponse {
    string requestId = 1;
    bytes payload = 2;
    EnumSerialize serialize = 3;
    string typeName = 4;
    bool succeed = 5;
    bytes tracingSpan = 6;
}
//------------------------------------------------
//服务实例请求计数历史数据
message RequestCount {
    int64 requestCount = 1;
    int64 succeedCount = 2;
    int64 respondTime = 3;
}
//服务实例请求计数历史数据，每分钟一条
message RequestCountHistory {
    repeated RequestCount items = 1;
}

//获取服务实例请求计数历史数据
message GetRequestCountHistory {
}

//------------------------------------------------
//获取注册服务节点列表
message GetRegisterInstances {
}

message Ping {
}

message Pong {
}

//-------------------------------------------------
//一些基础类型的message包装
message WrapInt {
    int32 value = 1;
    bytes tracingSpan = 2;
}
message WrapLong {
    int64 value = 1;
    bytes tracingSpan = 2;
}
message WrapFloat {
    float value = 1;
    bytes tracingSpan = 2;
}
message WrapDouble {
    double value = 1;
    bytes tracingSpan = 2;
}
message WrapBool {
    bool value = 1;
    bytes tracingSpan = 2;
}
message WrapBytesArray {
    repeated bytes value = 1;
    bytes tracingSpan = 2;
}
